<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yiqiandewo.mapper.IEmployeeMapper">

    <resultMap id="allDepMap" type="com.yiqiandewo.pojo.Employee">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="email" column="email"></result>
        <result property="gender" column="gender"></result>
        <result property="birth" column="birth"></result>
        <result property="departmentId" column="department_id"></result>
        <association property="department" javaType="com.yiqiandewo.pojo.Department">
            <id property="id" column="id"></id>
            <id property="departmentName" column="department_name"></id>
        </association>
    </resultMap>

    <select id="queryAllDepartment" resultMap="allDepMap">
       select e.*, d.* from `employee` e left join `department` d on e.department_id = d.id order by e.id asc;
    </select>

    <select id="queryAll" resultType="com.yiqiandewo.pojo.Employee">
        select * from `employee`
    </select>

    <select id="queryById" parameterType="Integer" resultType="com.yiqiandewo.pojo.Employee">
        select * from `employee` where `id` = #{id}
    </select>

    <insert id="save" parameterType="com.yiqiandewo.pojo.Employee">
        <!-- insert的返回值是指执行完insert语句后影响数据库的行数，只有0或者1(即失败或者成功)
            发现"select last_insert_id()"已经执行了但是并不是这个方法的返回值，
            "select last_insert_id()"语句的结果被封装到了employee对象中了，所以执行完sql语句后可以通过employee.getId();获得。
        -->
        <selectKey resultType="Integer" keyProperty="id" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into `employee` (`name`, `email`, `gender`, `birth`, `department_id`) values (#{name}, #{email}, #{gender}, #{birth}, #{departmentId});
    </insert>

    <update id="update" parameterType="com.yiqiandewo.pojo.Employee">
        update `employee` set `name` = #{name}, `email` = #{email}, `gender` = #{gender}, `birth` = #{birth}, `department_id` = #{departmentId} where `id` = #{id};
    </update>

    <delete id="del" parameterType="Integer">
        delete from `employee` where `id` = #{id};
    </delete>

</mapper>